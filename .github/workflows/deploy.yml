name: 'Build and Deploy Application'

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'k8s/**'
  workflow_dispatch:

jobs:
  deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get Resource Names from AWS
        id: get-resource-names
        run: |
          # These commands query AWS for resource names.
          # For better reliability, use outputs from a dedicated Terraform workflow if possible.
          echo "cluster_name=$(aws eks list-clusters --query "clusters[?starts_with(@, 'eks-gallery')]" --output text)" >> $GITHUB_ENV
          echo "iam_role_arn=$(aws iam get-role --role-name eks-gallery-app-sa-role --query 'Role.Arn' --output text)" >> $GITHUB_ENV
          
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.cluster_name }}-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region ${{ vars.AWS_REGION }} || true
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update Kubernetes Manifests
        run: |
          sed -i "s|IAM_ROLE_ARN_PLACEHOLDER|${{ env.iam_role_arn }}|g" k8s/serviceaccount.yaml
          sed -i "s|DOCKER_IMAGE_PLACEHOLDER|${{ steps.build-image.outputs.image }}|g" k8s/deployment.yaml
          sed -i "s|S3_BUCKET_NAME_PLACEHOLDER|${{ vars.S3_BUCKET_NAME }}|g" k8s/deployment.yaml
          sed -i "s|AWS_REGION_PLACEHOLDER|${{ vars.AWS_REGION }}|g" k8s/deployment.yaml
          
      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.cluster_name }} --region ${{ vars.AWS_REGION }}
          
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/gallery-deployment -n gallery-app --timeout=5m